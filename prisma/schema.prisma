// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Resume {
  id     String @id @default(cuid())
  userId String

  title       String?
  description String?

  photoUrl    String?
  colorHex    String  @default("#000000")
  borderStyle String  @default("squircle")
  summary     String?
  firstName   String?
  lastName    String?
  jobTitle    String?
  city        String?
  country     String?
  phone       String?
  email       String?
  websiteUrl  String?
  githubUrl   String?
  linkedInUrl String?

  workExperiences  WorkExperience[]
  education        Education[]
  skills           String[]
  languages        Language[]
  personalProjects PersonalProjects[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("resumes")
}

model WorkExperience {
  id String @id @default(cuid())

  position    String?
  company     String?
  startDate   DateTime?
  endDate     DateTime?
  description String?

  resumeId String
  resume   Resume @relation(fields: [resumeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("work_experiences")
}

model Education {
  id String @id @default(cuid())

  degree      String?
  institution String?
  startDate   DateTime?
  endDate     DateTime?

  resumeId String
  resume   Resume @relation(fields: [resumeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("educations")
}

enum LanguageLevel {
  Beginner
  Intermediate
  Advanced
  Native
}

model Language {
  id    String        @id @default(cuid())
  name  String
  level LanguageLevel

  resumeId String
  resume   Resume @relation(fields: [resumeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([resumeId, name])
  @@map("languages")
}

model PersonalProjects {
  id           String    @id @default(cuid())
  name         String?
  description  String?
  startDate    DateTime?
  endDate      DateTime?
  linkDeploy   String?
  linkCode     String?
  technologies String[]

  resumeId String
  resume   Resume @relation(fields: [resumeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("personal-projects")
}
